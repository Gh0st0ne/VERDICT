//
//
// Copyright Â© 2020 General Electric Company
//
// Author: Abha Moitra
// Date: 2019-09-30
//
//

uri "http://sadl.org/STEM/Run" alias run.

import "http://sadl.org/STEM/STEMRules".
import "http://sadl.org/STEM/Queries".

// For debugging csv file importing, uncomment the line that writes out the log file in each of the template files.
//		In VM would need to also replace c:/tmp/ by /home/soteria/tmp/

// 9/29/2020: updated so that the rules generated a new object; this is so that the CAPEC.csv
//				and Defenses.csv can have a new column that has "unique mitigation" so that
//				SOTERIA++ and "Synthesis" can correlate when a capec mitigation is
//				do X1 on a component or X2 on a connection.
//				The rules are no longer generated from the excel file; in fact the
//				Excel file needs to be updated.
//				The rules need to be checked!!!
// 8/5/2020: updated rules so that we no longer duplicate mitigation on connection on the component
//				which was what SOTERIA++ needed before handling connections properly.
//			Also, altered so that SystemAccessControl is now mapped to PE-3 and PE-3-1,
//				earlier it was mapped to just PE-3-1.
//			Also, where ever we had PhysicalAccessControl we have added SystemAccessControl as a mitigation. 
// 5/19/2020: updated rules to handle connection properties, added tooltips for connections in graph; outputting ConnDefenses.csv
// 5/8/2020: Reconciled properties, cleaned out, updated / cleared out default rules.
// 4/6/2020:
//			* Altered 2 queries to address when SrcComp is same as SrcCompInstanc
//			* Instead of outputting something like 7antiJamming we now output antiJamming DAL 7
// 3/30/2020: Generation.xlsx has been updated, including 3 new properties: failSafe, remoteAttestation, zeroize
//				Now there are 3 csv files read in and 2 new columns added in ScnConnections.csv.
//				The query related to writing out Defenses.csv had to be redone 
//				as we can now have up to 3 mitigations for a CAPEC.
//				Changed cType to componentType.
	
Read: data from "ScnConnections.csv" using "ScnConnections.tmpl".  //connections and ports
Read: data from "ScnCompProps.csv" using "ScnCompProps.tmpl". //scenario specific properties of component instances
Read: data from "ScnBusBindings.csv" using "ScnBusBindings.tmpl".

////Print:  Model .
//Explain: Rule TA1-Supply_Chain_Attack-I1.
// note this count may be larger than the number of entries in CAPEC.csv as there may be 
// multiple mitigations for a capec (e.g. capec-148 etc.)
Print: "Just get the counts of all CIA Issues".
Ask: "select count(*) where {?x <rdf:type> <CMitigation> } ".

Write: data {Ask: queries:Defenses2NIST.} to "/Output/Defenses2NIST.csv".

Write: data {Ask: queries:CAPEC.} to "/Output/CAPEC.csv". 

Write: data {Ask: queries:Defenses.} to "/Output/Defenses.csv".

Write: data {Ask: queries:ArchMitigation.} to "/Output/ArchMitigation.csv".


///////////////////////// GRAPHS ////////////////////////////
//////For graphing to work, install GraphViz and set path in environment variable GraphVizPath
////// if DAL is 0 then I show the property but the capec is "not addressed". Of course, this can be
////// changed by dropping ". FILTER(?dal > 0)" in 2 places
//
Graph: queries:STEMgraph.

/////////////////////// THE FOLLOWING TO GENERATE DATA FOR COMBINED VIEW //////////////////
//// to get count for verification
//Ask: "select count(*) where {?conn <rdf:type> <Connection> . ?conn <outPort> ?z1 . ?conn <inPort> ?z2} order by ?conn ".	 	
//
//// first part of Combined View tab is for each mitigation, what are the NIST defenses
//Ask: "select ?m (group_concat(distinct ?nist2;separator='; ') as ?nistlist) where
//{?m <rdf:type> <Mitigation> . ?m <nistControl> ?nist
//. LET(?nist2 := replace(str(?nist),'http.*#',''))
//} group by ?m order by ?m".
//
//// the following query will get most of the second piece of info that I have in the Combined View tab
//// the following will not surface capec-137 which in 1 row has more than 1 mitigation
//// note that the list of capecs is not sorted
//Ask: "select distinct ?m (group_concat(distinct ?id2;separator='; ') as ?capeclist) 
//  where { ?m <rdf:type> <Mitigation> . ?c <mitigation> ?m 
//. FILTER NOT EXISTS {?c <mitigation> ?m2 . FILTER(?m != ?m2)} 
//. ?c <ciaIssue> ?cia . ?c <id> ?id . ?c <capecDesc> ?desc
//. LET(?cia2 := replace(str(?cia),'http.*#',''))
//. LET(?cia3 := substr(str(?cia2),1,1))
//# use only one of the 2 LET lines below, the first one does not give capec description while the second one does
//. LET(?id2 := concat(str(?id), ?cia3))
//#. LET(?id2 := concat(concat(concat(str(?id),?cia3),'-'),?desc))
//} group by ?m order by ?m" .
//
//// the following lists the capecs that have more than 1 mitigation in a row
//Ask: "select ?c (count(*) as ?num) where
//{?c <mitigation> ?m1 } group by ?c having (?num > 1) order by ?c".
//
//// now the NIST info
//Ask: "select distinct ?id ?desc2 where 
//{?n <rdf:type> <NISTControl> . ?n <nistId> ?id . ?n <nistDesc> ?desc
//. LET(?desc2 := replace(str(?desc),'http.*#',''))}
//order by ?id".


